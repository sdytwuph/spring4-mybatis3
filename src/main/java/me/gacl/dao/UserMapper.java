package me.gacl.dao;

import me.gacl.domain.User;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import java.util.List;
public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated
     */
    @Delete({
        "delete from t_user",
        "where user_id = #{userId,jdbcType=CHAR}"
    })
    int deleteByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated
     */
    @Insert({
        "insert into t_user (user_id, user_name, ",
        "user_birthday, user_salary)",
        "values (#{userId,jdbcType=CHAR}, #{userName,jdbcType=VARCHAR}, ",
        "#{userBirthday,jdbcType=DATE}, #{userSalary,jdbcType=DOUBLE})"
    })
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "user_id, user_name, user_birthday, user_salary",
        "from t_user",
        "where user_id = #{userId,jdbcType=CHAR}"
    })
    @ResultMap("BaseResultMap")
    User selectByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbggenerated
     */
    @Update({
        "update t_user",
        "set user_name = #{userName,jdbcType=VARCHAR},",
          "user_birthday = #{userBirthday,jdbcType=DATE},",
          "user_salary = #{userSalary,jdbcType=DOUBLE}",
        "where user_id = #{userId,jdbcType=CHAR}"
    })
    int updateByPrimaryKey(User record);
    List<User> getAllUser();
}